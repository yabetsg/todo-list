(()=>{"use strict";const t=()=>({addButton:document.querySelector(".addButton"),cancelButton:document.querySelectorAll(".cancelButton"),addProjectButton:document.querySelector(".addProjectButton"),addTaskButton:document.querySelector(".addTaskButton"),projectFormContainer:document.querySelector(".projectFormContainer"),todoFormContainer:document.querySelector(".todoFormContainer"),projectList:document.querySelector(".projectList"),projectForm:document.querySelector(".projectForm"),todoForm:document.querySelector(".todoForm"),projectNameInput:document.querySelector(".projectNameInput"),todoTaskInput:document.querySelector(".todoTaskInput"),taskList:document.querySelector(".tasks"),allTaskLists:document.querySelector(".todoTitle"),projectNameContainer:document.querySelector(".projectNameContainer"),mainTitle:document.querySelector(".mainTitle"),inbox:document.getElementById("inbox"),dueDate:document.getElementById("date")}),e=t().todoFormContainer,n=t().todoTaskInput,o=t().taskList,c=t().mainTitle,a=t().dueDate,s=new class{constructor(){this.count=0}createTask(){for(let t=0;t<C.length;t++){E.push({});const e=C[t],s=E[t],r=document.createElement("button"),i=document.createElement("input"),d=document.createElement("span");i.type="date",i.classList.add("dateInput");let l=a.value;r.classList.add("todoTitle");const u=n.value;e.title===c.innerText&&(e[`task${this.count}`]=u,s[`task${this.count}`]=u,""===l&&(l="No Due Date"),s[`date${this.count}`]=l,e[`date${this.count}`]=l,r.innerText=e[`task${this.count}`],d.innerText=e[`date${this.count}`],E.push({[`task${this.count}`]:e[`task${this.count}`],[`date${this.count}`]:e[`date${this.count}`]}),r.appendChild(d),o.appendChild(r),console.log(E),this.count++)}e.classList.remove("active"),n.value=""}removeTasks(){for(;o.firstChild;)o.removeChild(o.firstChild)}},r=t().addProjectButton,i=t().projectFormContainer,d=t().addTaskButton,l=t().todoFormContainer,u=t().todoForm,m=t().projectForm,p=t().projectList,T=t().projectNameInput,h=t().taskList,k=t().mainTitle,v=t().cancelButton,L=t().inbox,C=(t().todoTaskInput,[]);C.push({title:"Inbox"}),r.addEventListener("click",(()=>{l.classList.remove("active"),i.classList.add("active")})),d.addEventListener("click",(()=>{i.classList.remove("active"),l.classList.add("active")}));const E=[];m.addEventListener("submit",(t=>{s.count=0;const e=document.createElement("button");e.classList.add("projectNameContainer");const n=document.createElement("i"),o=document.createElement("span"),c=T.value;o.innerText=c,e.appendChild(n),e.appendChild(o),p.appendChild(e),C.push({title:c}),i.classList.remove("active"),T.value="";const a=document.createElement("span");e.classList.contains("projectNameContainer")&&e.addEventListener("click",(t=>{s.removeTasks();const e=t.target.innerText;k.innerText=e;for(let t=0;t<C.length;t++){const e=C[t];if(e.title===k.innerText){const t=Object.keys(e);for(let n=0;n<t.length;n++)if(null!=e[`task${n}`]){const t=document.createElement("button");t.classList.add("todoTitle"),t.innerText=e[`task${n}`],a.innerText=e[`date${n}`],t.appendChild(a),h.appendChild(t)}}}}))})),u.addEventListener("submit",(()=>{s.createTask(),console.log("storage::"+JSON.stringify(C))})),v.forEach((t=>{t.addEventListener("click",(()=>{i.classList.remove("active"),l.classList.remove("active")}))})),L.addEventListener("click",(t=>{s.count=0,s.removeTasks(),k.innerText="inbox";const e=t.target.innerText;k.innerText=e;const n=document.createElement("span");for(let t=1;t<E.length;t++){const e=E[t];console.log("log el: "+e);const o=document.createElement("button");o.innerText=e[`task${s.count}`],n.innerText=e[`date${s.count}`],o.classList.add("todoTitle"),o.appendChild(n),h.appendChild(o)}}));const j=new Event("click");L.dispatchEvent(j)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,