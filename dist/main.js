(()=>{"use strict";const t=()=>({addButton:document.querySelector(".addButton"),cancelButton:document.querySelectorAll(".cancelButton"),addProjectButton:document.querySelector(".addProjectButton"),addTaskButton:document.querySelector(".addTaskButton"),projectFormContainer:document.querySelector(".projectFormContainer"),todoFormContainer:document.querySelector(".todoFormContainer"),projectList:document.querySelector(".projectList"),projectForm:document.querySelector(".projectForm"),todoForm:document.querySelector(".todoForm"),projectNameInput:document.querySelector(".projectNameInput"),todoTaskInput:document.querySelector(".todoTaskInput"),taskList:document.querySelector(".tasks"),allTaskLists:document.querySelector(".todoTitle"),projectNameContainer:document.querySelector(".projectNameContainer"),mainTitle:document.querySelector(".mainTitle"),inbox:document.getElementById("inbox")}),e=t().todoFormContainer,o=t().todoTaskInput,n=t().taskList,c=t().mainTitle,a=new class{constructor(){this.count=0}createTask(){for(let t=0;t<C.length;t++){const e=C[t],a=document.createElement("button");a.classList.add("todoTitle");const r=o.value;console.log(e.title),e.title===c.innerText&&(e[`task${this.count}`]=r,a.innerText=e[`task${this.count}`],j.push(e[`task${this.count}`]),n.appendChild(a),console.log(e),this.count++)}e.classList.remove("active"),o.value=""}removeTasks(){for(;n.firstChild;)n.removeChild(n.firstChild)}},r=t().addProjectButton,s=t().projectFormContainer,i=t().addTaskButton,d=t().todoFormContainer,l=t().todoForm,u=t().projectForm,m=t().projectList,p=t().projectNameInput,v=t().taskList,T=t().mainTitle,L=t().cancelButton,k=t().inbox,h=t().todoTaskInput,C=[],j=(r.addEventListener("click",(()=>{d.classList.remove("active"),s.classList.add("active")})),i.addEventListener("click",(()=>{s.classList.remove("active"),d.classList.add("active")})),[]);u.addEventListener("submit",(t=>{a.count=0;const e=document.createElement("button");e.classList.add("projectNameContainer");const o=document.createElement("i"),n=document.createElement("span"),c=p.value;n.innerText=c,e.appendChild(o),e.appendChild(n),m.appendChild(e),C.push({title:c}),s.classList.remove("active"),p.value="",e.classList.contains("projectNameContainer")&&e.addEventListener("click",(t=>{a.removeTasks();const e=t.target.innerText;T.innerText=e;for(let t=0;t<C.length;t++){const e=C[t];if(e.title===T.innerText){const t=Object.keys(e);for(let o=0;o<t.length;o++)if(null!=e[`task${o}`]){const t=document.createElement("button");t.classList.add("todoTitle"),t.innerText=e[`task${o}`],v.appendChild(t)}}}}))})),l.addEventListener("submit",(()=>{})),L.forEach((t=>{t.addEventListener("click",(()=>{s.classList.remove("active"),d.classList.remove("active")}))})),k.addEventListener("click",(t=>{a.removeTasks(),l.addEventListener("submit",(()=>{const e=document.createElement("button");e.classList.add("todoTitle"),h.value,console.log(t),e.innerText="todoTaskInput.value",v.appendChild(e)}));const e=t.target.innerText;T.innerText=e,document.createElement("button").classList.add("todoTitle");for(let t=0;t<j.length;t++){const e=j[t],o=document.createElement("button");o.innerText=e,o.classList.add("todoTitle"),v.appendChild(o)}console.log("Storage:"+j)}));const E=new Event("click");k.dispatchEvent(E)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,