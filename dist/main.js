(()=>{"use strict";const e=()=>({addButton:document.querySelector(".addButton"),cancelButton:document.querySelectorAll(".cancelButton"),addProjectButton:document.querySelector(".addProjectButton"),addTaskButton:document.querySelector(".addTaskButton"),projectFormContainer:document.querySelector(".projectFormContainer"),todoFormContainer:document.querySelector(".todoFormContainer"),projectList:document.querySelector(".projectList"),projectForm:document.querySelector(".projectForm"),todoForm:document.querySelector(".todoForm"),projectNameInput:document.querySelector(".projectNameInput"),todoTaskInput:document.querySelector(".todoTaskInput"),taskList:document.querySelector(".tasks"),allTaskLists:document.querySelector(".todoTitle"),projectNameContainer:document.querySelector(".projectNameContainer"),mainTitle:document.querySelector(".mainTitle"),inbox:document.getElementById("inbox"),dueDate:document.getElementById("date"),checkIcon:document.getElementsByTagName("p")}),t=(t,n)=>{t?(e().todoFormContainer.classList.remove("active"),e().projectFormContainer.classList.add("active")):n&&(e().projectFormContainer.classList.remove("active"),e().todoFormContainer.classList.add("active"))},n=(t,n)=>{const o=Object.keys(t);for(let a=0;a<o.length;a++)if(null!=t[`task${a}`]){const o=document.createElement("button"),c=document.createElement("span"),r=document.createElement("p"),d=document.createElement("div"),s=document.createElement("div"),i=document.createElement("button");i.classList.add("fa"),i.classList.add("fa-trash"),d.classList.add("leftSide"),s.classList.add("rightSide"),o.classList.add("todoTitle"),c.classList.add("taskDueDate"),r.innerText=t[`task${a}`],c.innerText=t[`date${a}`],d.appendChild(r),n&&(s.appendChild(c),s.appendChild(i)),o.appendChild(d),o.appendChild(s),e().taskList.appendChild(o)}},o=e().todoFormContainer,a=e().todoTaskInput,c=e().taskList,r=e().mainTitle,d=e().dueDate,s=new class{constructor(){this.count=0}createTask(){for(let e=0;e<v.length;e++){const t=v[e],n=document.createElement("button"),o=document.createElement("input"),s=document.createElement("span"),i=document.createElement("div"),l=document.createElement("div"),u=(document.createElement("i"),document.createElement("p")),m=document.createElement("button");o.type="date",o.classList.add("dateInput"),i.classList.add("leftSide"),l.classList.add("rightSide"),m.classList.add("fa"),m.classList.add("fa-trash"),s.classList.add("taskDueDate");let p=d.value;n.classList.add("todoTitle");const h=a.value;t.title===r.innerText&&(t[`task${this.count}`]=h,""===p&&(p="No Due Date"),t[`date${this.count}`]=p,u.innerText=t[`task${this.count}`],s.innerText=t[`date${this.count}`],i.appendChild(u),l.appendChild(s),l.appendChild(m),n.appendChild(i),n.appendChild(l),c.appendChild(n),this.count++)}o.classList.remove("active"),a.value=""}removeTasks(){for(;c.firstChild;)c.removeChild(c.firstChild)}},i=e().addProjectButton,l=(e().projectFormContainer,e().addTaskButton),u=(e().todoFormContainer,e().todoForm),m=e().projectForm,p=e().mainTitle,h=e().cancelButton,C=e().inbox,v=[],L=[],E=localStorage;L.push(E),v.push({title:"Inbox"}),E.setItem("title","inbox"),L[0].clear(),console.log(L[0]),i.addEventListener("click",(()=>{t(!0,!1)})),l.addEventListener("click",(()=>{t(!1,!0)})),m.addEventListener("submit",(t=>{s.count=0;const o=(t=>{const n=document.createElement("button");n.classList.add("projectNameContainer");const o=document.createElement("i"),a=document.createElement("span"),c=e().projectNameInput.value;return a.innerText=c,console.log("un:"+c),n.appendChild(o),n.appendChild(a),e().projectList.appendChild(n),t.push({title:c}),e().projectFormContainer.classList.remove("active"),e().projectNameInput.value="",{button:n}})(v).button;o.classList.contains("projectNameContainer")&&o.addEventListener("click",(e=>{s.removeTasks();const t=e.target.innerText;p.innerText=t;for(let e=0;e<v.length;e++){const t=v[e];t.title===p.innerText&&n(t,!0)}k()}))}));const k=()=>{const e=document.querySelectorAll(".fa-trash");if(e[0]){let t,n;e.forEach((e=>{t=e})),t.parentNode,e&&e.forEach((e=>{e.addEventListener("click",(t=>{console.log(e),n=e.parentNode.parentNode,n.remove();for(let e=0;e<v.length;e++){const t=v[e];for(const e in t)t[e]===n.firstChild.textContent&&t.title===p.textContent&&(delete t[`task${e.split("")[4]}`],delete t[`date${e.split("")[4]}`])}}))}))}};u.addEventListener("submit",(()=>{s.createTask(),E.setItem("store",JSON.stringify(v).replace("[","").replace("]","")),console.log(E),k()})),h.forEach((t=>{t.addEventListener("click",(()=>{e().projectFormContainer.classList.remove("active"),e().todoFormContainer.classList.remove("active")}))})),C.addEventListener("click",(e=>{s.removeTasks(),p.innerText="inbox";const t=e.target.innerText;p.innerText=t,console.log(t);for(let e=0;e<v.length;e++){const t=v[e];null!=t&&n(t,!1)}k()}));const T=new Event("click");C.dispatchEvent(T)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,