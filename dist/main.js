(()=>{"use strict";const e=()=>({addButton:document.querySelector(".addButton"),cancelButton:document.querySelectorAll(".cancelButton"),addProjectButton:document.querySelector(".addProjectButton"),addTaskButton:document.querySelector(".addTaskButton"),projectFormContainer:document.querySelector(".projectFormContainer"),todoFormContainer:document.querySelector(".todoFormContainer"),projectList:document.querySelector(".projectList"),projectForm:document.querySelector(".projectForm"),todoForm:document.querySelector(".todoForm"),projectNameInput:document.querySelector(".projectNameInput"),todoTaskInput:document.querySelector(".todoTaskInput"),taskList:document.querySelector(".tasks"),allTaskLists:document.querySelector(".todoTitle"),projectNameContainer:document.querySelector(".projectNameContainer"),mainTitle:document.querySelector(".mainTitle"),inbox:document.getElementById("inbox"),dueDate:document.getElementById("date"),checkIcon:document.getElementsByTagName("p")}),t=t=>{const n=Object.keys(t);for(let o=0;o<n.length;o++)if(null!=t[`task${o}`]){const n=document.createElement("button"),a=document.createElement("span"),c=document.createElement("p"),d=document.createElement("div"),r=document.createElement("div"),s=document.createElement("button");s.classList.add("fa"),s.classList.add("fa-trash"),d.classList.add("leftSide"),r.classList.add("rightSide"),n.classList.add("todoTitle"),a.classList.add("taskDueDate"),c.innerText=t[`task${o}`],a.innerText=t[`date${o}`],d.appendChild(c),r.appendChild(a),r.appendChild(s),n.appendChild(d),n.appendChild(r),e().taskList.appendChild(n)}},n=e().todoFormContainer,o=e().todoTaskInput,a=e().taskList,c=e().mainTitle,d=e().dueDate,r=new class{constructor(){this.count=0}createTask(){for(let e=0;e<C.length;e++){const t=C[e],n=document.createElement("button"),r=document.createElement("input"),s=document.createElement("span"),i=document.createElement("div"),l=document.createElement("div"),u=(document.createElement("i"),document.createElement("p")),m=document.createElement("button");r.type="date",r.classList.add("dateInput"),i.classList.add("leftSide"),l.classList.add("rightSide"),m.classList.add("fa"),m.classList.add("fa-trash"),s.classList.add("taskDueDate");let p=d.value;n.classList.add("todoTitle");const h=o.value;t.title===c.innerText&&(t[`task${this.count}`]=h,""===p&&(p="No Due Date"),t[`date${this.count}`]=p,u.innerText=t[`task${this.count}`],s.innerText=t[`date${this.count}`],i.appendChild(u),l.appendChild(s),l.appendChild(m),n.appendChild(i),n.appendChild(l),a.appendChild(n),this.count++)}n.classList.remove("active"),o.value=""}removeTasks(){for(;a.firstChild;)a.removeChild(a.firstChild)}},s=e().addProjectButton,i=e().projectFormContainer,l=e().addTaskButton,u=e().todoFormContainer,m=e().todoForm,p=e().projectForm,h=(e().projectList,e().projectNameInput,e().taskList,e().mainTitle),L=e().cancelButton,v=e().inbox,C=(e().checkIcon,e().todoTaskInput,e().allTaskLists,[]);C.push({title:"Inbox"}),console.log(C),s.addEventListener("click",(()=>{e().todoFormContainer.classList.remove("active"),e().projectFormContainer.classList.add("active")})),l.addEventListener("click",(()=>{e().projectFormContainer.classList.remove("active"),e().todoFormContainer.classList.add("active")})),p.addEventListener("submit",(n=>{r.count=0;const o=(t=>{const n=document.createElement("button");n.classList.add("projectNameContainer");const o=document.createElement("i"),a=document.createElement("span"),c=e().projectNameInput.value;return a.innerText=c,console.log("un:"+c),n.appendChild(o),n.appendChild(a),e().projectList.appendChild(n),t.push({title:c}),e().projectFormContainer.classList.remove("active"),e().projectNameInput.value="",{button:n}})(C).button;o.classList.contains("projectNameContainer")&&o.addEventListener("click",(e=>{r.removeTasks();const n=e.target.innerText;h.innerText=n;for(let e=0;e<C.length;e++){const n=C[e];n.title===h.innerText&&t(n)}k()}))}));const k=()=>{const e=document.querySelectorAll(".fa-trash");if(e[0]){let t,n;e.forEach((e=>{t=e})),t.parentNode,e&&e.forEach((e=>{e.addEventListener("click",(t=>{console.log(e),n=e.parentNode.parentNode,n.remove();for(let e=0;e<C.length;e++){const t=C[e];for(const e in t)t[e]===n.firstChild.textContent&&(console.log(`date${e.split("")[4]}`),delete t[e],delete t[`date${e.split("")[4]}`])}}))}))}};m.addEventListener("submit",(()=>{r.createTask(),k()})),L.forEach((e=>{e.addEventListener("click",(()=>{i.classList.remove("active"),u.classList.remove("active")}))})),v.addEventListener("click",(e=>{r.removeTasks(),h.innerText="inbox";const n=e.target.innerText;h.innerText=n;for(let e=0;e<C.length;e++){const n=C[e];null!=n&&t(n)}}));const T=new Event("click");v.dispatchEvent(T)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,